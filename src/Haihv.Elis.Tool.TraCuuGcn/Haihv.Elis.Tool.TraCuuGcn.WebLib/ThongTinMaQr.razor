@using System.Net.Http.Json
@using Haihv.Elis.Tool.TraCuuGcn.Models
@if (_maQrInfo == null)
{
    <MudAlert Severity="Severity.Error">Không có thông tin Mã Qr</MudAlert>
}
else if(!string.IsNullOrWhiteSpace(_error))
{
    <MudAlert Severity="Severity.Error">@_error</MudAlert>
}
else
{
    <MudText Typo="Typo.h6">Thông tin Mã Qr</MudText>
    <MudDivider/>
    <MudGrid>
        <MudItem xs="12" sm="6">
            <MudText Typo="Typo.body1">Thời gian khởi tạo: @_maQrInfo.ThoiGianKhoiTao.ToString("dd/MM/yyyy HH:mm:ss")</MudText>
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudText Typo="Typo.body1">Đơn vị in Giấy chứng nhận: @_maQrInfo.TenDonVi [@_maQrInfo.MaDonVi]</MudText>
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudText Typo="Typo.body1">Mã hồ sơ thủ tục hành chính: @_maQrInfo.MaHoSoTthc</MudText>
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudText Typo="Typo.body1">Số phát hành Giấy chứng nhận (Serial): @_maQrInfo.SerialNumber</MudText>
        </MudItem>
    </MudGrid>
    
}
@code {
    [Inject] protected IHttpClientFactory HttpClientFactory { get; set; } = null!;
    private HttpClient _httpClient = null!;
    [Parameter] public string? MaQr { get; set; }
    
    private const string Url = "/elis/qr-info";
    private string? _maQr;
    private MaQrInfo? _maQrInfo;
    private string? _error;

    protected override void OnInitialized()
    {
        _httpClient = HttpClientFactory.CreateClient("Auth");
    }
    
    protected override async Task OnParametersSetAsync()
    {
        if (MaQr == _maQr) return;
        _maQr = MaQr;
        await LoadDataAsync();
    }
    
    private async Task LoadDataAsync()
    {
        if (string.IsNullOrWhiteSpace(_maQr))
        {
            return;
        }
        var url = $"{Url}?maQr={_maQr}";
        try
        {
            var response = await _httpClient.GetFromJsonAsync<MaQrInfo>(url);
            if (response == null)
            {
                _error = "Không có thông tin Mã Qr";
                return;
            }
                    
            _maQrInfo = response;
            StateHasChanged();
        }
        catch (Exception e)
        {
            _error = e.Message;
            Console.WriteLine(e);
        }
    }

}