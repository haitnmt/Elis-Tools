@rendermode InteractiveWebAssembly

@if(!_hasCamera)
{
    <MudAlert Severity="Severity.Error">Không tìm thấy thiết bị camera</MudAlert>
}
else
{
    <BarcodeReader
        Title=""
        ShowStop="false" 
        StartCameraAutomatically="true"
        ShowStart="false"
        ShowReset="false"
        ShowToggleTorch = "false"
        ShowVideoDeviceList="false"
        FullWidthVideo="true"
        OnBarcodeReceived ="OnBarcodeReceivedAsync"
        VideoInputDevicesChanged="OnVideoInputDevicesChanged"
        ShowResult="false"
    />
}
<MudText Typo="Typo.body2">@_result</MudText>

@code
{
    [Parameter] public string? Result { get; set; }
    [Parameter] public EventCallback<string> ResultChanged { get; set; }
    [Parameter] public bool NoCamera { get; set; }
    [Parameter] public EventCallback<bool> NoCameraChanged { get; set; }
    private string? _result;
    private bool _hasCamera = true;
    
    private async Task OnBarcodeReceivedAsync(BarcodeReceivedEventArgs barcodeReader)
    {
        _result = barcodeReader.BarcodeText;
        Result = _result;
        await ResultChanged.InvokeAsync(_result);
        StateHasChanged();
    }
    private async Task OnVideoInputDevicesChanged(IEnumerable<VideoInputDevice>? devices)
    {
        // Kiểm tra xem có thiết bị camera nào không
        _hasCamera = devices?.Any() == true;
        NoCamera = !_hasCamera;
        await NoCameraChanged.InvokeAsync(!_hasCamera);
        StateHasChanged(); // Cập nhật giao diện người dùng
    }
}
