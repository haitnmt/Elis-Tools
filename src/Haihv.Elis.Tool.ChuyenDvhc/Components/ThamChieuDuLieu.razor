@using Haihv.Elis.Tool.ChuyenDvhc.Settings
@using Microsoft.Extensions.Caching.Memory

<MudExpansionPanel Expanded="false" Dense="true">
    <TitleContent>
        <MudStack Row="true" Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center">
            <MudText Typo="Typo.subtitle2">
                Cập nhật nội dung dữ liệu
            </MudText>
            <MudSpacer/>
            <MudButton Color="Color.Info" OnClick="ResetDefaultAsync">
                <MudText Typo="Typo.button">Mặc định</MudText>
            </MudButton>
            <MudTooltip>
                <ChildContent>
                    <MudIconButton Size="Size.Small" Icon="@Icons.Material.Filled.Help" Color="Color.Info"/>
                </ChildContent>
                <TooltipContent>
                    <MudText Typo="Typo.h6">Hướng dẫn</MudText>
                    <MudDivider/>
                    <MudText Align="Align.Start" Typo="Typo.body2">@ThamSoThayThe.NgaySapNhap: Ngày sáp nhập</MudText>
                    <MudText Align="Align.Start" Typo="Typo.body2">@ThamSoThayThe.SoThua: Số thửa đất</MudText>
                    <MudText Align="Align.Start" Typo="Typo.body2">@ThamSoThayThe.ToBanDo: Số tờ bản đồ</MudText>
                    <MudText Align="Align.Start" Typo="Typo.body2">@ThamSoThayThe.DonViHanhChinh: Tên đơn vị hành chính</MudText>
                </TooltipContent>
            </MudTooltip>
        </MudStack>
    </TitleContent>
    <ChildContent>
        <MudGrid Spacing="2" Class="mb-3">
            <MudItem xs="12" md="6" xxl="3">
                <MudTextField @bind-Value="@_toBanDoCu" Variant="Variant.Outlined" Margin="Margin.Dense"
                    HelperText="Hiển thị tại [Xem Thông tin thửa đất cũ]" Label="Tờ bản đồ cũ"
                    TextChanged="@(t => SetToBanDoCuCache(t))" />
            </MudItem>
            <MudItem xs="12" md="6" xxl="3">
                <MudTextField @bind-Value="@_ghiChuToBanDo" Variant="Variant.Outlined" Margin="Margin.Dense"
                    HelperText="Hiển thị tại [Bảng mã -> Danh mục Tờ bản đồ]" Label="Ghi chú Tờ bản đồ"
                    TextChanged="@(t => SetGhiChuToBanDoCache(t))" />
            </MudItem>
            <MudItem xs="12" md="6" xxl="3">
                <MudTextField @bind-Value="@_ghiChuThuaDat" Variant="Variant.Outlined" Margin="Margin.Dense"
                    HelperText="Hiển thị tại [Thông tin đăng ký -> thửa đất]" Label="Ghi chú Thửa đất"
                    TextChanged="@(t => SetGhiChuThuaDatCache(t))" />
            </MudItem>
            <MudItem xs="12" md="6" xxl="3">
                <MudTextField @bind-Value="@_ghiChuGiayChungNhan" Variant="Variant.Outlined" Margin="Margin.Dense"
                    HelperText="Hiển thị tại [Thông tin đăng ký -> Giấy chứng nhận]" Label="Ghi chú Giấy chứng nhận"
                    TextChanged="@(t => SetGhiChuGiayChungNhanCache(t))" />
            </MudItem>
        </MudGrid>
    </ChildContent>
</MudExpansionPanel>

@code
{
    [Inject] IMemoryCache MemoryCache { get; set; } = null!;
    [Parameter] public bool IsCompleted { get; set; }
    [Parameter] public EventCallback<bool> IsCompletedChanged { get; set; }
    private string _toBanDoCu = ThamSoThayThe.DefaultToBanDoCu;
    private string _ghiChuToBanDo = ThamSoThayThe.DefaultGhiChuToBanDo;
    private string _ghiChuThuaDat = ThamSoThayThe.DefaultGhiChuThuaDat;
    private string _ghiChuGiayChungNhan = ThamSoThayThe.DefaultGhiChuGiayChungNhan;

    protected override async Task OnInitializedAsync()
    {
        await SetAllCache();
    }

    /// <summary>
    /// Thiết lập tất cả các giá trị cache từ bộ nhớ.
    /// </summary>
    /// <returns>Task đại diện cho thao tác không đồng bộ.</returns>
    private async Task SetAllCache()
    {
        _toBanDoCu = await MemoryCache.GetOrCreateAsync(CacheThamSoDuLieu.ToBanDoCu,
        _ => Task.FromResult(_toBanDoCu)) ?? _toBanDoCu;
        _ghiChuToBanDo = await MemoryCache.GetOrCreateAsync(CacheThamSoDuLieu.GhiChuToBanDo,
        _ => Task.FromResult(_ghiChuToBanDo)) ?? _ghiChuToBanDo;
        _ghiChuThuaDat = await MemoryCache.GetOrCreateAsync(CacheThamSoDuLieu.GhiChuThuaDat,
        _ => Task.FromResult(_ghiChuThuaDat)) ?? _ghiChuThuaDat;
        _ghiChuGiayChungNhan = await MemoryCache.GetOrCreateAsync(CacheThamSoDuLieu.GhiChuGiayChungNhan,
        _ => Task.FromResult(_ghiChuGiayChungNhan)) ?? _ghiChuGiayChungNhan;
        SetCompleted();
    }

    /// <summary>
    /// Thiết lập giá trị cache cho Tờ bản đồ cũ.
    /// </summary>
    /// <param name="textChanged">Giá trị mới của Tờ bản đồ cũ.</param>
    private void SetToBanDoCuCache(string textChanged)
    {
        _toBanDoCu = textChanged;
        MemoryCache.Set(CacheThamSoDuLieu.ToBanDoCu, textChanged);
        SetCompleted();
    }


    /// <summary>
    /// Thiết lập giá trị cache cho Ghi chú Tờ bản đồ.
    /// </summary>
    /// <param name="textChanged">Giá trị mới của Ghi chú Tờ bản đồ.</param>
    private void SetGhiChuToBanDoCache(string textChanged)
    {
        _ghiChuToBanDo = textChanged;
        MemoryCache.Set(CacheThamSoDuLieu.GhiChuToBanDo, textChanged);
        SetCompleted();
    }

    /// <summary>
    /// Thiết lập giá trị cache cho Ghi chú Thửa đất.
    /// </summary>
    /// <param name="textChanged">Giá trị mới của Ghi chú Thửa đất.</param>
    private void SetGhiChuThuaDatCache(string textChanged)
    {
        _ghiChuThuaDat = textChanged;
        MemoryCache.Set(CacheThamSoDuLieu.GhiChuThuaDat, textChanged);
        SetCompleted();
    }

    /// <summary>
    /// Thiết lập giá trị cache cho Ghi chú Giấy chứng nhận.
    /// </summary>
    /// <param name="textChanged">Giá trị mới của Ghi chú Giấy chứng nhận.</param>
    private void SetGhiChuGiayChungNhanCache(string textChanged)
    {
        _ghiChuGiayChungNhan = textChanged;
        MemoryCache.Set(CacheThamSoDuLieu.GhiChuGiayChungNhan, textChanged);
        SetCompleted();
    }


    /// <summary>
    /// Thiết lập trạng thái hoàn thành.
    /// </summary>
    private void SetCompleted()
    {
        IsCompleted = !string.IsNullOrWhiteSpace(_toBanDoCu) &&
                      !string.IsNullOrWhiteSpace(_ghiChuToBanDo) &&
                      !string.IsNullOrWhiteSpace(_ghiChuThuaDat) &&
                      !string.IsNullOrWhiteSpace(_ghiChuGiayChungNhan);
        IsCompletedChanged.InvokeAsync(IsCompleted);
    }

    /// <summary>
    /// Đặt lại các giá trị mặc định.
    /// </summary>
    /// <param name="obj">Đối tượng sự kiện chuột.</param>
    private async Task ResetDefaultAsync(MouseEventArgs obj)
    {
        _toBanDoCu = ThamSoThayThe.DefaultToBanDoCu;
        _ghiChuToBanDo = ThamSoThayThe.DefaultGhiChuToBanDo;
        _ghiChuThuaDat = ThamSoThayThe.DefaultGhiChuThuaDat;
        _ghiChuGiayChungNhan = ThamSoThayThe.DefaultGhiChuGiayChungNhan;
        await SetAllCache();
    }
}