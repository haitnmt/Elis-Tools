@using Microsoft.Extensions.Caching.Memory

@inject IMemoryCache MemoryCache
<MudStack>
    @if (!IsConnected)
    {
        <MudAlert Severity="Severity.Warning">
            Vui lòng cấu hình kết nối cơ sở dữ liệu ELIS SQL trước khi tiếp tục! (Quay lại bước trước)
        </MudAlert>
    }
    else
    {
        <MudStack Row="true" StretchItems="StretchItems.All">
            <MudCard>
                <MudCardContent>
                    <MudStack>
                        <MudText Typo="Typo.body1"
                                 Color="Color.Primary">
                            Đơn vị hành chính trước chuyển đổi
                        </MudText>
                        <SelectDvhc IsConnected="IsConnected"
                                    IsBefore="true"
                                    MultiCapXa="true"
                                    CapTinhChanged="CapTinhChanged"
                                    CapHuyenChanged="CapHuyenChanged"
                                    CapXaChanged="CapXaChanged"/>
                    </MudStack>
                </MudCardContent>
            </MudCard>
            <MudCard>
                <MudCardContent>
                    <MudStack>
                        <MudText Typo="Typo.body1"
                                 Color="Color.Secondary">
                            Đơn vị hành chính sau chuyển đổi
                        </MudText>
                        <SelectDvhc IsConnected="IsConnected"
                                    IsBefore="false"
                                    MultiCapXa="false"
                                    CapTinh="_capTinh"
                                    CapTinhChanged="CapTinhSauChanged"
                                    CapHuyen="_capHuyen"
                                    CapHuyenChanged="CapHuyenSauChanged"
                                    CapXas="_capXaTruoc"
                                    CapXaChanged="CapXaSauChanged"/>
                        <MudTextField @bind-Value="@_tenDvhcSau"
                                      Variant="Variant.Outlined"
                                      Margin="Margin.Dense"
                                      Label="Tên đơn vị hành chính sau sát nhập"/>
                    </MudStack>
                </MudCardContent>
            </MudCard>
        </MudStack> 
        <ThamChieuTbd DvhcTruocs="_capXaTruoc" DvhcSau="_capXaSau" TenDvhcSau="@_tenDvhcSau"/>
    }
</MudStack>

@code
{
    [Parameter] public bool IsConnected { get; set; }
    private string _tenDvhcSau = string.Empty;
    private DvhcRecord? _capTinh;
    private DvhcRecord? _capHuyen;
    private List<DvhcRecord?> _capXaTruoc = [];
    private DvhcRecord? _capXaSau;

    private void CapTinhChanged(DvhcRecord? capTinh)
    {
        if (capTinh == null || _capTinh != null) return;
        _capTinh = capTinh;
        _capHuyen = null;
        _capXaTruoc = [];
    }

    private void CapTinhSauChanged(DvhcRecord? capTinh)
    {
        if (capTinh == null) return;
        _capTinh = capTinh;
        _capHuyen = null;
        _capXaTruoc = [];
    }

    private void CapHuyenChanged(DvhcRecord? capHuyen)
    {
        if (capHuyen == null || _capHuyen != null) return;
        _capHuyen = capHuyen;
        _capXaTruoc = [];
    }

    private void CapHuyenSauChanged(DvhcRecord? capHuyen)
    {
        if (capHuyen == null) return;
        _capHuyen = capHuyen;
    }

    private void CapXaChanged(IEnumerable<DvhcRecord?>? capXa)
    {
        if (capXa == null) return;
        _capXaTruoc = capXa.ToList();
        if (string.IsNullOrWhiteSpace(_tenDvhcSau))
            _tenDvhcSau = _capXaTruoc.Count > 0 ? _capXaTruoc[0]?.Ten ?? string.Empty : string.Empty;
    }

    private void CapXaSauChanged(IEnumerable<DvhcRecord?>? capXa)
    {
        if (capXa == null) return;
        var dvhcSau = capXa.ToList();
        if (dvhcSau.Count == 0) return;
        _capXaSau = dvhcSau[0];
        _tenDvhcSau = _capXaSau?.Ten ?? string.Empty;
    }
}
